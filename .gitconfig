[user]
    email = j.otavioms@gmail.com
    name = Jo√£o Souza

[color "branch"]
  current = yellow reverse
  local = yellow
  remote = green

[color "diff"]
  meta = yellow bold
  frag = magenta bold
  old = red
  new = green

[alias]
    # add
    a = add                           # add
    ap = add -p                       # add with compare

    # branch
    br = branch                       # branch
    
    # commit
    ci = commit                       # commit
    cia = commit -a                   # commit all
    cim = commit -m                   # commit with message
    ciam = commit -am                 # commit all with message
    amend = commit --amend            # ammend your last commit
    ammend = commit --amend           # ammend your last commit

    # checkout
    co = checkout                     # checkout
    cob = checkout -b                 # create and switch to a new branch (mnemonic: "git new branch branchname...")
    
    # cherry-pick
    cp = cherry-pick -x               # grab a change from a branch

    # diff
    d = diff                          # diff unstaged changes
    dc = diff --cached                # diff staged changes
    last = diff HEAD^                 # diff last committed change

    # log
    l = log --graph --date=short
    changes = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\" --name-status
    short = log --pretty=format:\"%h %cr %cn %Cgreen%s%Creset\"
    simple = log --pretty=format:\" * %s\"
    shortnocolor = log --pretty=format:\"%h %cr %cn %s\"
    timeline = log --oneline --graph --decorate
    last = log -1 HEAD

    # pull
    pl = pull                         # pull

    # push
    ps = push                         # push

    # rebase
    rc = rebase --continue            # continue rebase
    rs = rebase --skip                # skip rebase

    # remote
    r = remote -v                     # show remotes (verbose)

    # reset
    unstage = reset HEAD              # remove files from index (tracking)
    uncommit = reset --soft HEAD^     # go back before last commit, with files in uncommitted state
    filelog = log -u                  # show changes to a file
    mt = mergetool                    # fire up the merge tool

    # stash
    ss = stash                        # stash changes
    sl = stash list                   # list stashes
    sa = stash apply                  # apply stash (restore changes)
    sd = stash drop                   # drop stashes (destory changes)
    sp = stash pop                    # pop stashes (apply and destory changes)

    # status
    st = status                       # status

    # tag
    t = tag -n                        # show tags with <n> lines of each tag message

    # upstream
    set-upstream = !git branch --set-upstream-to=origin/`git symbolic-ref --short HEAD`

[push]
    default = current

[include]
  path = ~/.gitconfig.local
